/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!******************************!*\
  !*** ./resources/js/ajax.js ***!
  \******************************/
eval("/**\n * Add token on ajax request.\n */\n$.ajaxSetup({\n  headers: {\n    'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n  }\n});\n/**\n * Changes the user locale\n */\n\n$('.languageSet').click(function (e) {\n  console.log('Click button change locale');\n  e.preventDefault();\n  var select = document.getElementById(\"selectLanguage\");\n  var newLocale = select.value;\n  console.log('Change locale: ' + newLocale);\n  $.ajax({\n    type: 'POST',\n    url: \"/changeLocale\",\n    data: {\n      newLocale: newLocale\n    },\n    success: function success(result) {\n      var data = JSON.parse(result);\n      console.log('result=' + result);\n    },\n    error: function error(result) {\n      console.log('Ajax error!');\n      console.log('result=' + result);\n      str = JSON.stringify(result, null, 4); // beautiful indented output.\n\n      console.log(str);\n    }\n  });\n});\n/**\n * Request to the server to recalculate the prices of all products on the page.\n * Called when the currency is changed.\n */\n\n$('#selectCurrency').change(function (e) {\n  e.preventDefault();\n  var select = document.getElementById(\"selectCurrency\");\n  var currency = select.value;\n  console.log('Change currency: ' + currency);\n  $.ajax({\n    type: 'POST',\n    url: \"/ajaxGetPrices\",\n    data: {\n      currency: currency\n    },\n    success: function success(result) {\n      var data = JSON.parse(result);\n      console.log('result=' + result); // Get a list of products items on the Index page\n\n      var elements = document.getElementsByClassName(\"divPrice\");\n      var productList = [];\n\n      for (var i = 0; i < elements.length; i++) {\n        productList[i] = parseInt(elements[i].id.replace(/\\D/g, ''));\n      } //Change prices on the Index page\n\n\n      if (data.productPrices) {\n        for (var j = 0; j < data.productPrices.length; j++) {\n          flagProductIsListed = productList.indexOf(data.productPrices[j].id) != -1;\n\n          if (flagProductIsListed) {\n            document.getElementById('idPrice' + data.productPrices[j].id).textContent = data.productPrices[j].price;\n          }\n        }\n      } //Change prices on the Cart page\n\n\n      for (var k in data.pricesProductInCart) {\n        var divPrice = document.getElementById('idPrice' + k);\n\n        if (divPrice) {\n          divPrice.textContent = data.pricesProductInCart[k];\n        }\n\n        var idTdSum = document.getElementById('tdSum' + k);\n\n        if (idTdSum) {\n          idTdSum.textContent = data.sums[k]; //productPriceSum text (on the Cart page)\n        }\n      } //Change the Delivery costs on the Cart page\n\n\n      var deliveryCosts = document.getElementById('deliveryCosts');\n\n      if (deliveryCosts) {\n        deliveryCosts.textContent = data.deliveryCosts;\n      } //Change the Full price on the Cart page\n\n\n      var divFullPrice = document.getElementById('divFullPrice');\n\n      if (divFullPrice) {\n        divFullPrice.textContent = data.fullPrice;\n      } //Change currency name\n\n\n      $(\".divCurrencyName\").text(data.currencyLogo); //$(\"#divTest\").text(result);\n    },\n    error: function error(result) {\n      console.log('Ajax error!');\n      console.log('result=' + result);\n      str = JSON.stringify(result, null, 4); // beautiful indented output.\n\n      console.log(str);\n    }\n  });\n});\n/**\n * Change the category in the Index page header\n */\n\n$('#selectCategory').change(function (e) {\n  e.preventDefault();\n  var selectedCategory = document.getElementById(\"selectCategory\").value; //console.log('Change category: ' + selectedCategory);\n\n  window.location.href = '?category=' + selectedCategory;\n});\n/**\n * Increment/Decrement current quantity.\n */\n\n$('.buttonDecProduct, .buttonAddProduct').click(function (e) {\n  e.preventDefault();\n  nameProductId = $(this).attr('id');\n  productId = nameProductId.replace(/\\D/g, '');\n  console.log('productId=' + productId);\n\n  if (nameProductId.includes('idAddButton')) {\n    action = 'increment';\n    console.log('Click button Increment Product');\n  } else {\n    action = 'decrement';\n    console.log('Click button Decrement Product');\n  }\n\n  $.ajax({\n    type: 'POST',\n    url: \"/changeProductQuantity\",\n    data: {\n      productId: productId,\n      action: action\n    },\n    success: function success(result) {\n      var data = JSON.parse(result);\n      console.log('result=' + result);\n      setNewPricesOnPage(data);\n    },\n    error: function error(result) {\n      console.log('Ajax error!');\n      console.log('result=' + result);\n      str = JSON.stringify(result, null, 4); // beautiful indented output.\n\n      console.log(str);\n    }\n  });\n});\n/**\n * The function takes the price data, received from the server after changing the quantity of ordered goods and changes the old peices on the page to the new ones.\n * @param data\n */\n\nfunction setNewPricesOnPage(data) {\n  //Index page\n  var divCount = document.getElementById('divCount' + productId);\n\n  if (divCount) {\n    divCount.textContent = '(' + data.quantity + ' pieces)'; //Button text (index page)\n  } //Cart page\n\n\n  var tdQuantity = document.getElementById('tdQuantity' + productId);\n\n  if (tdQuantity) {\n    tdQuantity.textContent = data.quantity; //Quantity text (on the Cart page)\n\n    var idDecButton = document.getElementById('idDecButton' + productId);\n    var idTrProduct = document.getElementById('tr' + productId);\n\n    if (data.quantity > 0) {\n      idDecButton.classList.remove('disabled'); //Set \"Enable\" for the Decrement button\n\n      idTrProduct.classList.remove('td-draft'); //Set \"Disable\" for the Decrement button\n    } else {\n      idDecButton.classList.add('disabled'); //Set \"Disable\" for the Decrement button (on the Cart page)\n\n      idTrProduct.classList.add('td-draft'); //Highlight product with zero quantity (on the Cart page)\n    }\n\n    var idTdSum = document.getElementById('tdSum' + productId);\n    idTdSum.textContent = data.productPriceSum; //productPriceSum text (on the Cart page)\n\n    var divFullPrice = document.getElementById('divFullPrice');\n    divFullPrice.textContent = data.fullPrice; //productPriceSum text (on the Cart page)\n\n    if (data.fullPrice === data.deliveryCosts) {\n      var buttonSubmit = document.getElementById('buttonSubmit');\n      buttonSubmit.classList.add('disabled'); //Set \"Disable\" for the Submit button (on the Cart page)\n    }\n  }\n}\n/**\n * Navigation through the order panels in the shopping cart.\n */\n\n\n$('.buttonPartControl').click(function (e) {\n  e.preventDefault();\n  console.log('buttonPartControl'); //if user is on the Order page, go to the Cart page\n\n  if (window.location.pathname != '/cart') {\n    window.location.pathname = '/cart';\n  }\n\n  $(\"#part1\").slideToggle();\n  $(\"#part2\").slideToggle();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/ajax.js\n");
/******/ })()
;